name: App build
on: push

jobs:
  build_with_signing:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_DEVELOP_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PP_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build Archive
        env:
          # This step must use the custom keychain we created
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          xcodebuild archive -workspace ktp.usurp.ios/ktp.usurp.ios.xcworkspace \
          -scheme ppi \
          -configuration Release \
          -archivePath $RUNNER_TEMP/ppi.xcarchive \
          -sdk iphoneos \
          -destination generic/platform=iOS \
          clean archive

      - name: Export IPA
        env: 
          EXPORT_PLIST: ${{ secrets.PPI_EXPORT_PLIST }}
        run: |
          EXPORT_PLIST_PATH=$RUNNER_TEMP/ExportOptions.plist
          
          # Decode the export options plist from base64
          echo -n "$EXPORT_PLIST" | base64 --decode --output $EXPORT_PLIST_PATH

          # Export the IPA
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/ppi.xcarchive \
            -exportOptionsPlist $EXPORT_PLIST_PATH \
            -exportPath $RUNNER_TEMP/export
