name: App build
on: push

jobs:
  build_with_signing:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - { scheme: "ppi", cert: "BUILD_DISTRIBUTION_CERTIFICATE_BASE64", profile: "PP_BUILD_PROVISION_PROFILE_BASE64", ipa_name: "ppi.ipa", plist: "PPI_EXPORT_PLIST" }
          - { scheme: "pance", cert: "BUILD_DISTRIBUTION_CERTIFICATE_BASE64", profile: "PANCE_BUILD_PROVISION_PROFILE_BASE64", ipa_name: "pance.ipa", plist: "PANCE_EXPORT_PLIST" }

    steps:
      - name: Check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install the Apple certificate and provisioning profile for ${{ matrix.target.scheme }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets[matrix.target.cert] }}
          P12_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets[matrix.target.profile] }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Decode and import certificate and provisioning profile
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate into keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build archive for ${{ matrix.target.scheme }}
        run: |
          xcodebuild archive \
            -workspace ktp.usurp.ios/ktp.usurp.ios.xcworkspace \
            -scheme ${{ matrix.target.scheme }} \
            -configuration Release \
            -archivePath $RUNNER_TEMP/${{ matrix.target.scheme }}.xcarchive \
            -sdk iphoneos \
            -destination generic/platform=iOS \
            -allowProvisioningUpdates

      - name: Export ipa for ${{ matrix.target.scheme }}
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets[matrix.target.plist] }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/${{ matrix.target.scheme }}.xcarchive \
            -exportOptionsPlist $EXPORT_OPTS_PATH \
            -exportPath $RUNNER_TEMP/build

      # Add a debug step to check the existence of the .ipa file
      - name: List files in build folder (debugging)
        run: ls $RUNNER_TEMP/build

      # Ensure .ipa is being uploaded from the correct path
      - name: Upload application for ${{ matrix.target.scheme }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target.ipa_name }}
          path: $RUNNER_TEMP/build/${{ matrix.target.ipa_name }}
          retention-days: 3
