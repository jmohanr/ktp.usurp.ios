name: App build

on: push

jobs:
  build_with_signing:
    runs-on: macos-latest
    strategy:
      matrix:
        scheme: ["ppi", "pance"]
        cert: ["BUILD_DISTRIBUTION_CERTIFICATE_BASE64", "BUILD_DISTRIBUTION_CERTIFICATE_BASE64"]
        profile: ["PP_BUILD_PROVISION_PROFILE_BASE64", "PANCE_BUILD_PROVISION_PROFILE_BASE64"]
        ipa_name: ["ppi.ipa", "pance.ipa"]
        plist: ["PPI_EXPORT_PLIST", "PANCE_EXPORT_PLIST"]

    steps:
      - name: Check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod install --project-directory=ktp.usurp.ios

      - name: Install the Apple certificate and provisioning profile for ${{ matrix.scheme }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets[matrix.cert] }}
          P12_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets[matrix.profile] }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Decode and import certificate and provisioning profile
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate into keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build archive for ${{ matrix.scheme }}
        run: |
          xcodebuild archive \
            -workspace ktp.usurp.ios/ktp.usurp.ios.xcworkspace \
            -scheme ${{ matrix.scheme }} \
            -configuration Release \
            -archivePath $RUNNER_TEMP/${{ matrix.scheme }}.xcarchive \
            -sdk iphoneos \
            -destination generic/platform=iOS \
            -allowProvisioningUpdates

      - name: List archive contents (debugging)
        run: ls $RUNNER_TEMP/${{ matrix.scheme }}.xcarchive

      - name: Export ipa for ${{ matrix.scheme }}
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets[matrix.plist] }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/${{ matrix.scheme }}.xcarchive \
            -exportOptionsPlist $EXPORT_OPTS_PATH \
            -exportPath $RUNNER_TEMP/build/${{ matrix.scheme }}

      - name: Debug IPA export (checking build path after export)
        run: |
          echo "Checking the export directory for .ipa"
          ls -al $RUNNER_TEMP/build/${{ matrix.scheme }}

      - name: List build output (debugging)
        run: ls $RUNNER_TEMP/build/${{ matrix.scheme }}

      - name: Upload .ipa file as artifact for ${{ matrix.scheme }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.ipa_name }}
          path: $RUNNER_TEMP/build/${{ matrix.scheme }}/${{ matrix.ipa_name }}
          retention-days: 3
